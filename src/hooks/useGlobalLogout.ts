import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

/**
 * Hook ƒë·ªÉ detect logout t·ª´ tab kh√°c v√† redirect v·ªÅ login page
 * S·ª≠ d·ª•ng localStorage events ƒë·ªÉ sync gi·ªØa c√°c tabs
 */
export const useGlobalLogout = () => {
  const navigate = useNavigate();

  useEffect(() => {
    // Function ƒë·ªÉ check khi localStorage thay ƒë·ªïi
    const handleStorageChange = (e: StorageEvent) => {
      // N·∫øu token b·ªã remove t·ª´ tab kh√°c
      if (e.key === 'token' && e.newValue === null) {
        console.log('üö™ Detected logout from another tab, redirecting to login...');
        navigate('/login');
      }
      
      // Ho·∫∑c n·∫øu c√≥ event logout custom
      if (e.key === 'logout-event') {
        console.log('üö™ Received logout event from another tab');
        localStorage.removeItem('logout-event'); // Clean up
        navigate('/login');
      }
    };

    // L·∫Øng nghe storage events (ch·ªâ trigger khi change t·ª´ tab kh√°c)
    window.addEventListener('storage', handleStorageChange);

    // Cleanup function
    return () => {
      window.removeEventListener('storage', handleStorageChange);
    };
  }, [navigate]);

  // Function ƒë·ªÉ trigger logout cho t·∫•t c·∫£ tabs
  const triggerGlobalLogout = () => {
    // Remove tokens
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    
    // Trigger event cho c√°c tabs kh√°c
    localStorage.setItem('logout-event', Date.now().toString());
    
    // Navigate current tab
    navigate('/login');
  };

  return { triggerGlobalLogout };
};
